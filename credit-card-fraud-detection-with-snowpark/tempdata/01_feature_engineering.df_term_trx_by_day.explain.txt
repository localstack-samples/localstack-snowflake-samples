---------DATAFRAME EXECUTION PLAN----------
Query List:
1.
SELECT "TERMINAL_ID", "TX_DATE", sum("NB_FRAUD") AS "NB_FRAUD", sum("NO_TRX") AS "NO_TRX" FROM ( SELECT "r_stuq_TERMINAL_ID" AS "TERMINAL_ID", "TX_DATE", ZEROIFNULL("TX_FRAUD") AS "NB_FRAUD",  CASE  WHEN "TX_FRAUD" IS NULL THEN 0 :: INT ELSE 1 :: INT END  AS "NO_TRX" FROM ( SELECT  *  FROM (( SELECT "TRANSACTION_ID" AS "TRANSACTION_ID", "TX_DATETIME" AS "TX_DATETIME", "CUSTOMER_ID" AS "CUSTOMER_ID", "TERMINAL_ID" AS "l_liq9_TERMINAL_ID", "TX_AMOUNT" AS "TX_AMOUNT", "TX_TIME_SECONDS" AS "TX_TIME_SECONDS", "TX_TIME_DAYS" AS "TX_TIME_DAYS", "TX_FRAUD" AS "TX_FRAUD", "TX_FRAUD_SCENARIO" AS "TX_FRAUD_SCENARIO" FROM CUSTOMER_TRANSACTIONS_FRAUD) AS SNOWPARK_LEFT RIGHT OUTER JOIN ( SELECT "ID" AS "ID", "TX_DATE" AS "TX_DATE", "TERMINAL_ID" AS "r_stuq_TERMINAL_ID" FROM ( SELECT  *  FROM (( SELECT "ID" AS "ID", "TX_DATE" AS "TX_DATE" FROM ( SELECT "ID", to_date(dateadd('DAY', seq4(0), '2019-04-01')) AS "TX_DATE" FROM ( SELECT ( ROW_NUMBER()  OVER ( ORDER BY  SEQ8() ) -  1 ) * (1) + (0) AS id FROM ( TABLE (GENERATOR(ROWCOUNT => 152)))))) AS SNOWPARK_LEFT INNER JOIN ( SELECT "TERMINAL_ID" AS "TERMINAL_ID" FROM TERMINALS) AS SNOWPARK_RIGHT))) AS SNOWPARK_RIGHT ON (("l_liq9_TERMINAL_ID" = "r_stuq_TERMINAL_ID") AND (to_date("TX_DATETIME") = "TX_DATE"))))) GROUP BY "TERMINAL_ID", "TX_DATE"
Logical Execution Plan:
GlobalStats:
    partitionsTotal=2
    partitionsAssigned=2
    bytesAssigned=14766080
Operations:
1:0     ->Result  TERMINALS.TERMINAL_ID, TO_DATE(DATE_ADDDAYSTOTIMESTAMP(SEQ4(0), '2019-04-01 00:00:00.000000000Z')), SUM(ZEROIFNULL(CUSTOMER_TRANSACTIONS_FRAUD.TX_FRAUD)), SUM(IFF(CUSTOMER_TRANSACTIONS_FRAUD.TX_FRAUD IS NULL, 0, 1))  
1:1          ->Aggregate  aggExprs: [SUM(ZEROIFNULL(CUSTOMER_TRANSACTIONS_FRAUD.TX_FRAUD)), SUM(IFF(CUSTOMER_TRANSACTIONS_FRAUD.TX_FRAUD IS NULL, 0, 1))], groupKeys: [TERMINALS.TERMINAL_ID, TO_DATE(DATE_ADDDAYSTOTIMESTAMP(SEQ4(0), '2019-04-01 00:00:00.000000000Z'))]  
1:2               ->LeftOuterJoin  joinKey: (CUSTOMER_TRANSACTIONS_FRAUD.TERMINAL_ID = TERMINALS.TERMINAL_ID) AND (TO_DATE(CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME) = TO_DATE(DATE_ADDDAYSTOTIMESTAMP(SEQ4(0), '2019-04-01 00:00:00.000000000Z')))  
1:3                    ->Filter  (CUSTOMER_TRANSACTIONS_FRAUD.TERMINAL_ID IS NOT NULL) AND (TO_DATE(CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME) IS NOT NULL)  
1:4                         ->TableScan  TEST.PUBLIC.CUSTOMER_TRANSACTIONS_FRAUD  TX_DATETIME, TERMINAL_ID, TX_FRAUD  {partitionsTotal=1, partitionsAssigned=1, bytesAssigned=14747648}
1:5                    ->CartesianJoin  
1:6                         ->TableScan  TEST.PUBLIC.TERMINALS  TERMINAL_ID  {partitionsTotal=1, partitionsAssigned=1, bytesAssigned=18432}
1:7                         ->Generator  152  

--------------------------------------------
