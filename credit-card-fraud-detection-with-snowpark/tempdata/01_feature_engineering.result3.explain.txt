---------DATAFRAME EXECUTION PLAN----------
Query List:
1.
SELECT  *  FROM ( SELECT "TX_DURING_WEEKEND", "TX_DURING_NIGHT", "TX_FRAUD", (RATIO_TO_REPORT("COUNT") OVER (PARTITION BY "TX_DURING_WEEKEND", "TX_DURING_NIGHT"  ) * 100 :: INT) AS "PERCENTAGE" FROM ( SELECT  *  FROM ( SELECT "TX_DURING_WEEKEND", "TX_DURING_NIGHT", "TX_FRAUD", count(1) AS "COUNT" FROM ( SELECT "TRANSACTION_ID", "TX_DATETIME", "CUSTOMER_ID", "TERMINAL_ID", "TX_AMOUNT", "TX_TIME_SECONDS", "TX_TIME_DAYS", "TX_FRAUD", "TX_FRAUD_SCENARIO", iff(((dayofweek("TX_DATETIME") = 6 :: INT) OR (dayofweek("TX_DATETIME") = 0 :: INT)), 1, 0) AS "TX_DURING_WEEKEND", iff(((hour("TX_DATETIME") < 6 :: INT) OR (hour("TX_DATETIME") > 20 :: INT)), 1, 0) AS "TX_DURING_NIGHT" FROM CUSTOMER_TRANSACTIONS_FRAUD) GROUP BY "TX_DURING_WEEKEND", "TX_DURING_NIGHT", "TX_FRAUD") ORDER BY "TX_DURING_WEEKEND" ASC NULLS FIRST, "TX_DURING_NIGHT" ASC NULLS FIRST, "TX_FRAUD" ASC NULLS FIRST)) ORDER BY "TX_DURING_WEEKEND" ASC NULLS FIRST, "TX_DURING_NIGHT" ASC NULLS FIRST, "TX_FRAUD" ASC NULLS FIRST
Logical Execution Plan:
GlobalStats:
    partitionsTotal=1
    partitionsAssigned=1
    bytesAssigned=14747648
Operations:
1:0     ->Result  IFF(((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 6) OR ((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 0), 1, 0), IFF(((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) < 6) OR ((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) > 20), 1, 0), CUSTOMER_TRANSACTIONS_FRAUD.TX_FRAUD, ((COUNT(1)) / (IFF(SUM(COUNT(1)) OVER (PARTITION BY IFF(((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 6) OR ((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 0), 1, 0), IFF(((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) < 6) OR ((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) > 20), 1, 0)) = 0, null, SUM(COUNT(1)) OVER (PARTITION BY IFF(((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 6) OR ((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 0), 1, 0), IFF(((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) < 6) OR ((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) > 20), 1, 0))))) * 100  
1:1          ->Sort  IFF(((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 6) OR ((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 0), 1, 0) ASC NULLS FIRST, IFF(((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) < 6) OR ((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) > 20), 1, 0) ASC NULLS FIRST, CUSTOMER_TRANSACTIONS_FRAUD.TX_FRAUD ASC NULLS FIRST  
1:2               ->WindowFunction  SUM(COUNT(1)) OVER (PARTITION BY IFF(((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 6) OR ((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 0), 1, 0), IFF(((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) < 6) OR ((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) > 20), 1, 0))  
1:3                    ->Sort  IFF(((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 6) OR ((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 0), 1, 0) ASC NULLS FIRST, IFF(((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) < 6) OR ((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) > 20), 1, 0) ASC NULLS FIRST, CUSTOMER_TRANSACTIONS_FRAUD.TX_FRAUD ASC NULLS FIRST  
1:4                         ->Aggregate  aggExprs: [COUNT(1)], groupKeys: [IFF(((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 6) OR ((EXTRACT(dayofweek from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) = 0), 1, 0), IFF(((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) < 6) OR ((EXTRACT(hour from CUSTOMER_TRANSACTIONS_FRAUD.TX_DATETIME)) > 20), 1, 0), CUSTOMER_TRANSACTIONS_FRAUD.TX_FRAUD]  
1:5                              ->TableScan  TEST.PUBLIC.CUSTOMER_TRANSACTIONS_FRAUD  TX_DATETIME, TX_FRAUD  {partitionsTotal=1, partitionsAssigned=1, bytesAssigned=14747648}

--------------------------------------------
